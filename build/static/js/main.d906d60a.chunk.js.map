{"version":3,"sources":["utils/validate.js","components/register-page/register.js","components/404-page/404.js","components/start-quiz-page/startPage.js","components/quiz/timer.js","components/quiz/questions.js","components/quiz/submit.js","components/quiz/quiz.js","App.js","index.js"],"names":["validEmailId","email","test","String","toLowerCase","validate","state","quizName","teamName","validEmail","length","lengt","Register","useState","setEmail","setQuizName","setTeamName","registed","setIsRegisted","err","setErr","loading","setLoading","registerUser","a","async","newUser","fetch","method","headers","body","JSON","stringify","then","res","json","data","token","error","saveItLocally","catch","swal","user","sessionStorage","hasOwnProperty","key","removeItem","setItem","to","id","className","onChange","type","placeholder","value","e","target","name","onClick","preventDefault","verified","PageNotFound","home","toHome","StartQuizPage","auth","setAuth","quiz","setQuiz","useEffect","parse","getItem","getAllQuestions","status","time","Timer","props","startTimer","quizTimer","setInterval","setState","min","Math","floor","sec","timer","stopTimer","submit","setIntervaId","this","intervalId","Component","QuestionsComp","questions","mapAnswersToQuestion","forEach","ques","answers","_id","updateAnswer","question","answer","questionId","option","getAttribute","updateYourAnswers","map","quesNo","options","updateYoutAnswer","optionAns","Submit","noQuestions","setNoQuestions","logout","setLogout","calcPoints","points","yourAnswers","checkForCertificate","minRequirement","sendPoints","certificate","Logout","clear","Quiz","allQuestions","setAllQuestions","setTimer","setAnswers","setYourAnswers","setSubmit","setQuizNama","stopTimerProp","clearInterval","resetLoading","obj","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"8cAgBMA,EAAe,SAACC,GAElB,MADW,0JACAC,KAAKC,OAAOF,GAAOG,gBAGnBC,EArBE,SAACC,GAAW,IACjBL,EAA8BK,EAA9BL,MAAOM,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,SACrBC,EAAaT,EAAaC,GAC9B,MAAc,KAAVA,GAA6B,KAAbM,GAAgC,KAAbC,EAC5B,8BACFP,EAAMS,OAAS,IAAoB,IAAfD,EAClB,2BACFF,EAASI,MAAQ,EACf,kCACFH,EAASE,OAAS,IAChB,iC,gBCkGAE,G,OAtGE,WAAO,IAAD,EACMC,mBAAS,IADf,mBACZZ,EADY,KACNa,EADM,OAEYD,mBAAS,IAFrB,mBAEZN,EAFY,KAEHQ,EAFG,OAGYF,mBAAS,IAHrB,mBAGZL,EAHY,KAGHQ,EAHG,OAIcH,oBAAS,GAJvB,mBAIZI,EAJY,KAIHC,EAJG,OAKEL,mBAAS,IALX,mBAKZM,EALY,KAKRC,EALQ,OAMUP,oBAAS,GANnB,mBAMZQ,EANY,KAMJC,EANI,KAgBbC,EAAe,0BAAAC,EAAAC,OAAA,uDACjBH,GAAW,GACPI,EAAU,CAAEzB,QAAOO,WAAUD,YAFhB,WAAAiB,EAAA,MAGXG,MAAM,qDAAqD,CAC7DC,OAAS,OACTC,QAAU,CACN,OAAU,mBACV,+BAA+B,EAC/B,eAAgB,oBAEpBC,KAAOC,KAAKC,UAAUN,KAEzBO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFd,GAAW,GADD,IAGJe,EAAiBD,EAAjBC,MAAOC,EAAUF,EAAVE,MACTA,GAAOlB,EAAOkB,GACdD,IACAE,EAAcF,EAAMX,GACpBR,GAAc,OAGrBsB,OAAM,SAAArB,GACHG,GAAW,GACXmB,IAAK,0BAA0B,eAAe,aAzBjC,sCA6BfF,EAAgB,SAACF,EAAOK,GAC1B,IAAIpC,EAAQqC,eAAeC,eAAe,SACtCC,EAAMF,eAAeC,eAAe,OACpCtC,GAAOqC,eAAeG,WAAW,SACjCD,GAAKF,eAAeG,WAAW,OACnCH,eAAeI,QAAQ,QAAQhB,KAAKC,UAAUU,IAC9CC,eAAeI,QAAQ,MAAMhB,KAAKC,UAAUK,KAGhD,OAAIpB,EAAqB,kBAAC,IAAD,CAAU+B,GAAG,gBAGlC,0BAAMC,GAAG,cACL,0BACIA,GAAG,aACHC,UAAW7B,EAAU,UAAY,GACjCO,OAAO,OACPuB,SAAU,kBAAM/B,EAAO,MAErBD,EAAM,0BAAM8B,GAAG,OAAO9B,GACxBE,EAAU,0BAAM6B,UAAU,YAAoB,GAC9C,2BACIE,KAAK,OACLC,YAAY,mBACZC,MAAOrD,EACPkD,SAAU,SAACI,GAAD,OAAOzC,EAASyC,EAAEC,OAAOF,QACnCG,KAAK,QACLP,UAAU,gBAEd,2BACIE,KAAK,OACLC,YAAY,sBACZC,MAAO9C,EACP2C,SAAU,SAACI,GAAD,OAAOvC,EAAYuC,EAAEC,OAAOF,QACtCG,KAAK,WACLP,UAAU,gBAEd,2BACIE,KAAK,OACLC,YAAY,uBACZC,MAAO/C,EACP4C,SAAU,SAACI,GAAD,OAAOxC,EAAYwC,EAAEC,OAAOF,QACtCG,KAAK,WACLP,UAAU,gBAEd,wCACIQ,QAnFD,SAACH,GACZA,EAAEI,iBACF,IACIC,EAAWvD,EADH,CAAEJ,QAAOM,WAAUC,cAEd,IAAboD,GAAmBxC,EAAOwC,IACb,IAAbA,GAAmBrC,KA+EX2B,UAAU,kBAFd,YAGc,aAHd,gB,QC1EDW,G,cAlBM,WAAO,IAAD,EACDhD,oBAAS,GADR,mBAChBiD,EADgB,KACXC,EADW,KAGvB,OAAID,EAAiB,kBAAC,IAAD,CAAUd,GAAG,MAG9B,0BAAMC,GAAG,YACL,wBAAIA,GAAG,WAAP,4BACA,4BACIS,QAAS,kBAAMK,GAAO,IACtBd,GAAG,OAFP,WC4GGe,G,OAhHO,WAAO,IAAD,EACDnD,oBAAS,GADR,mBACjBoD,EADiB,KACZC,EADY,OAEOrD,mBAAS,IAFhB,mBAEjBN,EAFiB,KAERQ,EAFQ,OAGOF,mBAAS,IAHhB,mBAGjBL,EAHiB,KAGRQ,EAHQ,OAIKH,oBAAS,GAJd,mBAIjBQ,EAJiB,KAITC,EAJS,OAKDT,oBAAS,GALR,mBAKjBsD,EALiB,KAKZC,EALY,KAOxBC,qBAAU,WACN,IAAI/D,EAAQyB,KAAKuC,MAAM3B,eAAe4B,QAAQ,UAC1C1B,EAAM,QAASF,eAEfrC,GAASuC,IACTqB,GAAQ,GACRnD,EAAYT,EAAMC,UAClBS,EAAYV,EAAME,UAClBiC,IAAK,iCAAiC,2CAA2C,WAEvF,IAEF,IAoCM+B,EAAkB,SAAOnC,GAAP,SAAAb,EAAAC,OAAA,kEAAAD,EAAA,MAEdG,MAAM,kEAAkE,CAC1EC,OAAS,MACTC,QAAU,CACN,OAAU,mBACV,+BAA+B,EAC/B,eAAgB,mBAChB,WAAaQ,KAGpBJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFd,GAAW,GAEPc,EAAKjB,KACLsB,IAAK,wBAAwB,oCAAoC,SAEhEL,EAAKjB,KACNwB,eAAeI,QAAQ,YAAYhB,KAAKC,UAAL,YAAmBI,QAG7DI,OAAM,SAAArB,GACCA,IACAG,GAAW,GACXmB,IAAK,wBAAwB,cAAc,cAzB/B,sCAmCxB,OAAKwB,EAEDE,EAAiB,kBAAC,IAAD,CAAUnB,GAAG,UAG9B,0BAAMC,GAAG,aAAaC,UAAW7B,EAAU,UAAY,IACnD,6BAAS4B,GAAG,OACN5B,EAAU,0BAAM6B,UAAU,YAAoB,GAChD,wBAAIA,UAAU,gBAAd,eACgB,+BAAK3C,EAAL,MAEhB,wBAAI2C,UAAU,gBAAd,eACgB,+BAAK1C,EAAL,MAEhB,4BAAQkD,QArFF,0BAAAlC,EAAAC,OAAA,qDACVY,EAAQN,KAAKuC,MAAM3B,eAAe4B,QAAQ,SADhC,uBAIVjD,GAAW,GAJD,WAAAE,EAAA,MAKJG,MAAM,0DAA0D,CAClEC,OAAS,MACTC,QAAU,CACN,OAAU,mBACV,+BAA+B,EAC/B,eAAgB,mBAChB,WAAaQ,KAGpBJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAOG,GAAP,iBAAAZ,EAAAC,OAAA,mDAEIgD,EAAiBrC,EAAjBqC,OAAQC,EAAStC,EAATsC,KACC,MAAXD,GAAgBhC,IAAK,oCACV,aAAXgC,GAAuBhC,IAAK,qBACjB,YAAXgC,EALF,uBAME9B,eAAeI,QAAQ,QAAQ2B,GANjC,WAAAlD,EAAA,MAOQgD,EAAgBnC,IAPxB,OAQE+B,GAAQ,GACR3B,IAAK,yBATP,wCAYLD,OAAM,SAAArB,GACCA,IACAG,GAAW,GACXmB,IAAK,wBAAwB,cAAc,cA9BzC,sCAqFsBQ,GAAG,aAA/B,gBAdQ,kBAAC,EAAD,Q,gDC9CT0B,G,mBA/CX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAcVC,WAAa,WACT,IAAIC,EAAYC,aAAY,WACxB,GAAwB,IAApB,EAAKzE,MAAMoE,KAAY,CACvB,EAAKM,SAAS,CAACN,KAAO,EAAKpE,MAAMoE,KAAO,IACxC,IAAIO,EAAMC,KAAKC,MAAM,EAAK7E,MAAMoE,KAAO,IACnCU,EAAM,EAAK9E,MAAMoE,KAAa,GAANO,EAC5BA,EAAMA,EAAM,GAAK,IAAMA,EAAMA,EAC7BG,EAAMA,EAAM,GAAK,IAAMA,EAAMA,EAC7B,EAAKJ,SAAS,CAAEK,MAAK,UAAMJ,EAAN,YAAaG,UAElC,EAAKE,YACL7C,IAAK,wBACL,EAAKmC,MAAMW,WAGjB,KACF,EAAKX,MAAMY,aAAaV,IA7BxB,EAAKxE,MAAQ,CACToE,KAAO,EACPW,MAAQ,SAJG,E,iFASXI,KAAKb,MAAMS,OACXI,KAAKT,SAAS,CAAEN,KAAOe,KAAKb,MAAMS,QAEtCI,KAAKZ,e,kCAuBLY,KAAKb,MAAMU,UAAUG,KAAKb,MAAMc,c,+BAIhC,OACI,yBAAKzC,GAAG,cACJ,wBAAIA,GAAG,SAAUwC,KAAKnF,MAAM+E,Y,GA1CxBM,cCqELC,G,mBArEX,WAAYhB,GAAQ,IAAD,8BACf,4CAAMA,KACDtE,MAAQ,CACTuF,UAAY,IAHD,E,iFASXJ,KAAKb,MAAMiB,YACXJ,KAAKT,SAAS,CAAEa,UAAS,YAAOJ,KAAKb,MAAMiB,aAC3CJ,KAAKK,qBAAqBL,KAAKb,MAAMiB,c,2CAIvBA,GAAY,IAAD,OACJ,IAArBA,EAAUnF,QACVmF,EAAUE,SAAQ,SAAAC,GACT,EAAKpB,MAAMqB,QAAQD,EAAKE,MACzB,EAAKtB,MAAMuB,aAAX,eAA0BH,EAAKE,IAAOF,EAAKI,SAASC,c,uCAMlD9C,GACd,IAAI+C,EAAa/C,EAAEC,OAAOP,GACtBsD,EAAShD,EAAEC,OAAOgD,aAAa,UACnCf,KAAKb,MAAM6B,kBAAX,eAA+BH,EAAcC,M,+BAGvC,IAAD,OACL,OACI,6BAAStD,GAAG,iBAERwC,KAAKnF,MAAMuF,UAAUa,KAAI,WAAmBC,GAAY,IAA5BP,EAA2B,EAA3BA,SAAUF,EAAiB,EAAjBA,IAClC,OACI,yBAAKrD,IAAKqD,EAAKjD,GAAG,aACd,wBAAIA,GAAG,YACF0D,EAAS,EADd,KACoBP,EAASJ,MAE7B,0BAAM/C,GAAG,WACPmD,EAASQ,QAAQF,KAAI,SAAAH,GACnB,OACA,yBAAK1D,IAAK0D,EAAOtD,GAAIA,GAAG,UACpB,2BACIJ,IAAK0D,EAAOtD,GACZG,KAAK,QACLK,KAAK,SACLR,GAAIiD,EACJK,OAAQA,EAAOA,OACf7C,QAAS,SAACH,GAAD,OAAO,EAAKsD,iBAAiBtD,MAE1C,0BAAMN,GAAG,iBACJsD,EAAOA,OADZ,MACuBA,EAAOO,WACvB,2C,GAxDfnB,cCkFboB,G,OAhFA,SAACnC,GAAW,IAAD,EACe/D,mBAAS,GADxB,mBACfmG,EADe,KACHC,EADG,OAEKpG,oBAAS,GAFd,mBAEfqG,EAFe,KAERC,EAFQ,KAItB9C,qBAAU,WAAYO,EAAMW,QAAQA,MAAU,CAACX,EAAMW,SACrDlB,qBAAU,WAAYO,EAAMoC,aAAaC,EAAerC,EAAMoC,eAAc,CAACpC,EAAMoC,cAEnF,IAAMzB,EAAS,WACXX,EAAMU,UAAUV,EAAMc,YACtBd,EAAMtD,aACN8F,KAGEA,EAAa,WACf,IAAIC,EAAS,EACb,IAAK,IAAIf,KAAc1B,EAAM0C,YACrB1C,EAAMqB,QAAQK,KAAgB1B,EAAM0C,YAAYhB,KAChDe,GAAU,GAGlBE,EAAoBF,IAGlBE,EAAsB,SAACF,GAEzB,IAAIG,EAAiBtC,KAAKC,MAAM6B,EAAc,GAE1CS,EAAWJ,EADXA,GAAUG,IAOZC,EAAa,SAACJ,EAAOK,GACvB,IAAI7E,EAAMd,KAAKuC,MAAM3B,eAAe4B,QAAQ,QACxCrC,EAAMH,KAAKC,UAAU,CAAC,OAAWqF,EAAO,YAAgBK,IACxD7E,GACAlB,MAAM,2DAA2D,CAC7DC,OAAS,OACTC,QAAU,CACN,OAAU,mBACV,+BAA+B,EAC/B,eAAgB,mBAChB,WAAagB,GAEjBf,KAAOI,IAEVD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFwC,EAAMtD,aACNqG,IACIvF,EAAKE,MACLG,IAAK,0BAA0B,uBAAuB,SAEtDA,IAAK,sCAAsC,wCAAwC,cAG1FD,OAAM,SAAArB,GAEHyD,EAAMtD,aACNqG,IACAlF,IAAK,0BAA0B,uBAAuB,aAK5DkF,EAAS,WACXhF,eAAeiF,QACfT,GAAU,IAGd,OAAID,EAAiB,kBAAC,IAAD,CAAUlE,GAAG,MAG9B,4BAAQU,QAAS6B,EAAQtC,GAAG,UAA5B,YCHO4E,G,OArEF,WAAO,IAAD,EACQhH,oBAAS,GADjB,mBACRoD,EADQ,KACHC,EADG,OAEwBrD,mBAAS,IAFjC,mBAERiH,EAFQ,KAEKC,EAFL,OAGUlH,mBAAS,GAHnB,mBAGRwE,EAHQ,KAGF2C,EAHE,OAIcnH,mBAAS,IAJvB,mBAIRoF,EAJQ,KAIAgC,EAJA,OAKsBpH,mBAAS,IAL/B,mBAKRyG,EALQ,KAKIY,EALJ,OAMmBrH,mBAAS,IAN5B,mBAMR6E,EANQ,KAMGF,EANH,OAOY3E,oBAAS,GAPrB,mBAOR0E,EAPQ,KAOD4C,EAPC,OAQgBtH,mBAAS,IARzB,mBAQRN,EARQ,KAQC6H,EARD,OAScvH,oBAAS,GATvB,mBASRQ,EATQ,KASAC,EATA,KAWf+C,qBAAU,WACN,IAAIwB,EAAY9D,KAAKuC,MAAM3B,eAAe4B,QAAQ,cAC9Cc,EAAQtD,KAAKuC,MAAM3B,eAAe4B,QAAQ,UAC1C1B,EAAM,QAASF,eACfrC,EAAQyB,KAAKuC,MAAM3B,eAAe4B,QAAQ,UAC1CsB,GAAaR,GAASxC,GAAOvC,IAC7B4D,GAAQ,GACR6D,EAAgB,YAAIlC,IACpBmC,EAAS3C,GACT+C,EAAY9H,EAAMC,aAExB,IAGF,IAEM8H,EAAgB,SAACpF,GAAD,OAAQqF,cAAcrF,IAM5C,OAAKgB,EAGD,0BAAMhB,GAAG,OAAOC,UAAW7B,EAAU,UAAY,IAC5CA,EAAU,0BAAM6B,UAAU,YAAoB,GAC/C,yBAAKD,GAAG,eACJ,kBAAC,EAAD,CACIoC,MAAOA,EACPC,UAAW+C,EACX3C,WAAYA,EACZF,aAfS,SAACvC,GAAD,OAAQuC,EAAavC,IAgB9BsC,OAfM,kBAAM4C,GAAU,MAiB1B,wBAAIlF,GAAG,aAAc1C,GACrB,kBAAC,EAAD,CACI0F,QAASA,EACTqB,YAAaA,EACb/B,OAAQA,EACRG,WAAYA,EACZJ,UAAW+C,EACXrB,YAAac,EAAapH,OAC1BY,WAxBO,kBAAMA,GAAW,IAyBxBiH,aAxBS,kBAAMjH,GAAW,OA2BlC,kBAAC,EAAD,CACIuE,UAAWiC,EACX7B,QAASA,EACTqB,YAAaA,EACbnB,aArCS,SAACqC,GAAD,OAASP,GAAW,SAAA3H,GAAK,sBAASA,EAAT,GAAkBkI,OAsCpD/B,kBArCc,SAAC+B,GAAD,OAASN,GAAe,SAAA5H,GAAK,sBAASA,EAAT,GAAkBkI,UAOtD,kBAAC,EAAD,QChBRC,EAhBH,WACV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,eACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACR,kBAAC,EAAD,SCdVC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d906d60a.chunk.js","sourcesContent":["const validate = (state) => {\r\n    const { email, quizName, teamName } = state\r\n    let validEmail = validEmailId(email)\r\n    if (email === \"\" || quizName === \"\" || teamName === \"\"){\r\n        return \"all fields are required!...\"\r\n    }else if(email.length < 5 || validEmail === false){\r\n        return \"enter an valid email!...\"\r\n    }else if(quizName.lengt < 3){\r\n        return \"quizName should be min 5 char\"\r\n    }else if(teamName.length < 5){\r\n        return \"teamName should be min 5 char\"\r\n    }else {\r\n        return true\r\n    }\r\n}\r\n\r\nconst validEmailId = (email) => {\r\n    let reg =  /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    return reg.test(String(email).toLowerCase())\r\n}\r\n\r\nexport default validate\r\n\r\n","import React,{ useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport validate from '../../utils/validate'\r\nimport swal from 'sweetalert';\r\nimport './style/register.css'\r\n\r\nconst Register = () => {\r\n    const [email,setEmail] = useState(\"\")\r\n    const [quizName,setQuizName] = useState(\"\")\r\n    const [teamName,setTeamName] = useState(\"\")\r\n    const [registed,setIsRegisted] = useState(false)\r\n    const [err,setErr] = useState(\"\")\r\n    const [loading,setLoading] = useState(false)\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault()\r\n        let state = { email, quizName, teamName }\r\n        let verified = validate(state)    \r\n        if (verified !== true) setErr(verified)\r\n        if (verified === true) registerUser()\r\n    }\r\n\r\n    const registerUser = async () => {\r\n        setLoading(true)\r\n        let newUser = { email, teamName, quizName }\r\n        await fetch(\"https://quiz-app-v1.herokuapp.com/api/client/login\",{\r\n            method : \"POST\",\r\n            headers : {\r\n                'Accept': 'application/json',\r\n                'Access-Control-Allow-Origin': true,\r\n                'Content-Type': 'application/json'                \r\n            },\r\n            body : JSON.stringify(newUser)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setLoading(false)\r\n            // console.log(data)\r\n            let { token, error } = data \r\n            if (error) setErr(error)\r\n            if (token) {\r\n                saveItLocally(token,newUser)\r\n                setIsRegisted(true)\r\n            }\r\n        })\r\n        .catch(err => {\r\n            setLoading(false)\r\n            swal(\"something went wrong!..\",\"try again...\",\"error\")\r\n        }) \r\n    }\r\n\r\n    const saveItLocally = (token, user) => {\r\n        let state = sessionStorage.hasOwnProperty(\"state\")\r\n        let key = sessionStorage.hasOwnProperty(\"key\")\r\n        if (state) sessionStorage.removeItem(\"state\")\r\n        if (key) sessionStorage.removeItem(\"key\")\r\n        sessionStorage.setItem(\"state\",JSON.stringify(user))\r\n        sessionStorage.setItem(\"key\",JSON.stringify(token))\r\n    }\r\n\r\n    if (registed) { return ( <Redirect to=\"/start-quiz\"/> )}\r\n\r\n    return (\r\n        <main id=\"login-main\">\r\n            <form \r\n                id=\"login-form\" \r\n                className={loading ? \"fade-bg\" : \"\"} \r\n                method=\"post\" \r\n                onChange={() => setErr(\"\")} \r\n            >\r\n                { err ? <span id=\"err\">{err}</span> :  \r\n                loading ? <span className=\"loading\"></span> : \"\" }\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"enter your email\" \r\n                    value={email} \r\n                    onChange={(e) => setEmail(e.target.value)} \r\n                    name=\"email\"\r\n                    className=\"login-input\"\r\n                />\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"enter your teamname\" \r\n                    value={teamName} \r\n                    onChange={(e) => setTeamName(e.target.value)} \r\n                    name=\"teamName\"\r\n                    className=\"login-input\"\r\n                />\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"enter your quiz name\" \r\n                    value={quizName} \r\n                    onChange={(e) => setQuizName(e.target.value)}\r\n                    name=\"quizName\"\r\n                    className=\"login-input\"\r\n                />\r\n                <button \r\n                    onClick={submit} \r\n                    className=\"reg-submit-btn\"\r\n                    className=\"login-btn\"\r\n                >\r\n                    register\r\n                </button>\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Register","import React,{ useState } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport './style/404.css'\r\n\r\nconst PageNotFound = () => {\r\n    const [home,toHome] = useState(false)\r\n\r\n    if (home) { return ( <Redirect to=\"/\"/>  ) }\r\n\r\n    return (\r\n        <main id=\"err-page\">\r\n            <h1 id=\"err-msg\"> your not authericed... </h1>\r\n            <button \r\n                onClick={() => toHome(true)}\r\n                id=\"btn\"\r\n            > \r\n                home \r\n            </button>\r\n        </main>\r\n    )\r\n}   \r\n\r\nexport default PageNotFound\r\n","import React, { useState, useEffect } from 'react'\r\nimport swal from 'sweetalert'\r\nimport { Redirect } from 'react-router-dom'\r\nimport crypto from 'crypto'\r\n\r\nimport _404 from '../404-page/404'\r\nimport './style/start-page.css'\r\n\r\nconst StartQuizPage = () => {\r\n    const [auth,setAuth] = useState(false)\r\n    const [quizName,setQuizName] = useState(\"\")\r\n    const [teamName,setTeamName] = useState(\"\")\r\n    const [loading,setLoading] = useState(false)\r\n    const [quiz,setQuiz] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let state = JSON.parse(sessionStorage.getItem(\"state\"))\r\n        let key = \"key\" in sessionStorage\r\n        // console.log(state,key) \r\n        if (state && key) {\r\n            setAuth(true)  \r\n            setQuizName(state.quizName)\r\n            setTeamName(state.teamName)\r\n            swal(\"your registred successfully!..\",\"proceed by pressing start quiz button...\",\"info\")\r\n        }\r\n    },[])\r\n\r\n    const startQuiz = async () => {\r\n        let token = JSON.parse(sessionStorage.getItem(\"key\"))\r\n        // console.log(token)\r\n        if (token) {\r\n            setLoading(true)\r\n            await fetch(\"https://quiz-app-v1.herokuapp.com/api/client/start-quiz\",{\r\n                method : \"GET\",\r\n                headers : {\r\n                    'Accept': 'application/json',\r\n                    'Access-Control-Allow-Origin': true,\r\n                    'Content-Type': 'application/json',                \r\n                    \"auth-key\" : token\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(async (data) => {\r\n                // console.log(data)\r\n                let { status, time } = data\r\n                if (status === \"-\") swal(\"pls wait quiz is not started....\")\r\n                if (status === \"finished\") swal(\"quiz finished!...\")\r\n                if (status === \"started\") {\r\n                    sessionStorage.setItem(\"timer\",time)\r\n                    await getAllQuestions(token)\r\n                    setQuiz(true)\r\n                    swal(\"quiz has started!....\")\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if (err) {\r\n                    setLoading(false)\r\n                    swal(\"something went wrong!\",\"try agin...\",\"error\")\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const getAllQuestions = async (token) => {\r\n        // console.log(\"get all questions...\")\r\n        await fetch(\"https://quiz-app-v1.herokuapp.com/api/client/get-quiz-questions\",{\r\n            method : \"GET\",\r\n            headers : {\r\n                'Accept': 'application/json',\r\n                'Access-Control-Allow-Origin': true,\r\n                'Content-Type': 'application/json',                \r\n                \"auth-key\" : token\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setLoading(false)\r\n            // console.log(data)\r\n            if (data.err) {\r\n                swal(\"something went wrong!\",\"reload this page and try again...\",\"error\")\r\n            }\r\n            if (!data.err) {\r\n                sessionStorage.setItem(\"questions\",JSON.stringify([...data]))\r\n            }\r\n        })\r\n        .catch(err => {\r\n            if (err){\r\n                setLoading(false)\r\n                swal(\"something went wrong!\",\"try agin...\",\"error\")\r\n            }\r\n        })\r\n    }\r\n\r\n    const getRandomId = () => {\r\n        let id = crypto.randomBytes(15).toString(\"hex\")\r\n        return id \r\n    }\r\n\r\n    if (!auth) return ( <_404/> )\r\n\r\n    if (quiz) { return ( <Redirect to=\"/quiz\"/> )}\r\n\r\n    return (\r\n        <main id=\"start-main\" className={loading ? \"fade-bg\" : \"\"}>                \r\n            <section id=\"box\">\r\n                { loading ? <span className=\"loading\"></span> : \"\" }\r\n                <h2 className=\"start-header\">\r\n                    quiz-name : <b> {quizName} </b>\r\n                </h2> \r\n                <h2 className=\"start-header\">\r\n                    team-name : <b> {teamName} </b>\r\n                </h2> \r\n                <button onClick={startQuiz} id=\"start-btn\">  \r\n                    start quiz\r\n                </button>                \r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default StartQuizPage","import React,{ Component } from 'react'\r\nimport swal from 'sweetalert'\r\nimport './style/timer.css'\r\n\r\nclass Timer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            time : 0,\r\n            timer : \"00:00\"\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (this.props.timer) {\r\n            this.setState({ time : this.props.timer })\r\n        }\r\n        this.startTimer()\r\n    }\r\n\r\n    startTimer = () => {\r\n        var quizTimer = setInterval(() => {\r\n            if (this.state.time !== 0) {\r\n                this.setState({time : this.state.time - 1})      \r\n                let min = Math.floor(this.state.time / 60)\r\n                let sec = this.state.time - min * 60\r\n                min = min < 10 ? \"0\" + min : min\r\n                sec = sec < 10 ? \"0\" + sec : sec\r\n                this.setState({ timer : `${min}:${sec}`})\r\n            } else {\r\n                this.stopTimer()\r\n                swal(\"your out of time!...\")\r\n                this.props.submit()\r\n            }\r\n            \r\n        },1000)\r\n        this.props.setIntervaId(quizTimer)\r\n    }\r\n\r\n    stopTimer () {\r\n        this.props.stopTimer(this.props.intervalId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"timer-comp\">\r\n                <h2 id=\"timer\">{ this.state.timer }</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer\r\n\r\n","import React,{ Component } from 'react'\r\nimport './style/questions.css'\r\n\r\nclass QuestionsComp extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            questions : []\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        // console.log(this.props)\r\n        if (this.props.questions) {\r\n            this.setState({ questions : [...this.props.questions] })\r\n            this.mapAnswersToQuestion(this.props.questions)\r\n        }\r\n    }\r\n\r\n    mapAnswersToQuestion (questions) {\r\n        if (questions.length !== 0) {\r\n            questions.forEach(ques => {\r\n                if (!this.props.answers[ques._id]) {\r\n                    this.props.updateAnswer({[ques._id] : ques.question.answer})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    updateYoutAnswer (e) {\r\n        let questionId = e.target.id \r\n        let option = e.target.getAttribute(\"option\")\r\n        this.props.updateYourAnswers({[questionId] : option})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section id=\"question-comp\">\r\n             {\r\n                this.state.questions.map(({ question, _id },quesNo) => {\r\n                    return (\r\n                        <div key={_id} id=\"container\">\r\n                            <h2 id=\"question\">\r\n                                {quesNo + 1}. { question.ques }\r\n                            </h2>\r\n                            <form id=\"options\">\r\n                            { question.options.map(option => {\r\n                                return (\r\n                                <div key={option.id} id=\"option\">\r\n                                    <input\r\n                                        key={option.id}\r\n                                        type=\"radio\"\r\n                                        name=\"option\" \r\n                                        id={_id}\r\n                                        option={option.option}\r\n                                        onClick={(e) => this.updateYoutAnswer(e)}\r\n                                    />\r\n                                    <span id=\"option-answer\">\r\n                                        {option.option} . {option.optionAns}\r\n                                    </span><br/>\r\n                                </div>\r\n                                )\r\n                            })} \r\n                            </form>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuestionsComp\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport swal from 'sweetalert'\r\nimport './style/submit.css'\r\n\r\nconst Submit = (props) => {\r\n    const [noQuestions,setNoQuestions] = useState(0)\r\n    const [logout,setLogout] = useState(false)\r\n \r\n    useEffect(() => { if (props.submit) submit()},[props.submit])\r\n    useEffect(() => { if (props.noQuestions) setNoQuestions(props.noQuestions)},[props.noQuestions])\r\n\r\n    const submit = () => {\r\n        props.stopTimer(props.intervalId)\r\n        props.setLoading()\r\n        calcPoints()\r\n    }\r\n\r\n    const calcPoints = () => {\r\n        let points = 0\r\n        for (let questionId in props.yourAnswers) {\r\n            if (props.answers[questionId] === props.yourAnswers[questionId]) {\r\n                points += 1\r\n            }\r\n        }\r\n        checkForCertificate(points)\r\n    }\r\n\r\n    const checkForCertificate = (points) => {\r\n        // console.log(points)\r\n        let minRequirement = Math.floor(noQuestions / 2)\r\n        if (points >= minRequirement) {\r\n            sendPoints(points,true)\r\n        } else { \r\n            sendPoints(points,false) \r\n        }\r\n    }\r\n\r\n    const sendPoints = (points,certificate) => {\r\n        let key = JSON.parse(sessionStorage.getItem(\"key\"))\r\n        let res = JSON.stringify({\"points\" : points,\"certificate\" : certificate})\r\n        if (key){\r\n            fetch(\"https://quiz-app-v1.herokuapp.com/api/client/send-result\",{\r\n                method : \"POST\",\r\n                headers : {\r\n                    'Accept': 'application/json',\r\n                    'Access-Control-Allow-Origin': true,\r\n                    'Content-Type': 'application/json',\r\n                    'auth-key' : key\r\n                },\r\n                body : res\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                props.setLoading()\r\n                Logout()\r\n                if (data.error) {\r\n                    swal(\"something went wrong!..\",\"pls contact incharge\",\"error\")\r\n                } else {\r\n                    swal(\"submitted your answers successfully\",\"check your email for certification...\",\"success\")\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n                props.setLoading()\r\n                Logout()\r\n                swal(\"something went wrong!..\",\"pls contact incharge\",\"error\")\r\n            })\r\n        }\r\n    }\r\n\r\n    const Logout = () => {\r\n        sessionStorage.clear()\r\n        setLogout(true)\r\n    }\r\n\r\n    if (logout) return ( <Redirect to=\"/\"/> )\r\n    \r\n    return (\r\n        <button onClick={submit} id=\"submit\">\r\n            submit\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Submit","import React, { useState, useEffect } from 'react'\r\nimport Timer from './timer'\r\nimport Questions from './questions'\r\nimport Submit from './submit'\r\nimport _404 from '../404-page/404'\r\nimport './style/quiz.css'\r\n\r\nconst Quiz = () => {\r\n    const [auth,setAuth] = useState(false)\r\n    const [allQuestions,setAllQuestions] = useState([]) \r\n    const [timer,setTimer] = useState(0)\r\n    const [answers,setAnswers] = useState({})\r\n    const [yourAnswers,setYourAnswers] = useState({})\r\n    const [intervalId,setIntervaId] = useState(\"\")\r\n    const [submit,setSubmit] = useState(false)\r\n    const [quizName,setQuizNama] = useState(\"\")\r\n    const [loading,setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let questions = JSON.parse(sessionStorage.getItem(\"questions\"))\r\n        let timer = JSON.parse(sessionStorage.getItem(\"timer\"))\r\n        let key = \"key\" in sessionStorage\r\n        let state = JSON.parse(sessionStorage.getItem(\"state\"))\r\n        if (questions && timer && key && state) {\r\n            setAuth(true)\r\n            setAllQuestions([...questions])\r\n            setTimer(timer)\r\n            setQuizNama(state.quizName)\r\n        }\r\n    },[])\r\n\r\n    // prop method's\r\n    const updateAnswer = (obj) => setAnswers(state => ({...state,...obj}))\r\n    const updateYourAnswers = (obj) => setYourAnswers(state => ({...state,...obj}))\r\n    const stopTimerProp = (id) => clearInterval(id)\r\n    const setIntervaIdProp = (id) => setIntervaId(id)\r\n    const setSubmitProp = () => setSubmit(true)\r\n    const setLoadingProp = () => setLoading(true)\r\n    const resetLoadingProp = () => setLoading(false)\r\n  \r\n    if (!auth) return( <_404/> )\r\n\r\n    return (\r\n        <main id=\"quiz\" className={loading ? \"fade-bg\" : \"\"}>\r\n            {loading ? <span className=\"loading\"></span> : \"\"}\r\n            <nav id=\"quiz-header\">\r\n                <Timer \r\n                    timer={timer}\r\n                    stopTimer={stopTimerProp}\r\n                    intervalId={intervalId}\r\n                    setIntervaId={setIntervaIdProp}\r\n                    submit={setSubmitProp}\r\n                />\r\n                <h2 id=\"quiz-name\">{ quizName }</h2>\r\n                <Submit \r\n                    answers={answers}\r\n                    yourAnswers={yourAnswers}\r\n                    submit={submit}\r\n                    intervalId={intervalId}\r\n                    stopTimer={stopTimerProp}\r\n                    noQuestions={allQuestions.length}\r\n                    setLoading={setLoadingProp}\r\n                    resetLoading={resetLoadingProp}\r\n                />\r\n            </nav>\r\n            <Questions \r\n                questions={allQuestions}\r\n                answers={answers}\r\n                yourAnswers={yourAnswers}\r\n                updateAnswer={updateAnswer}\r\n                updateYourAnswers={updateYourAnswers}\r\n            />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Quiz\r\n\r\n","import React,{ useState, useEffect } from 'react'\r\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom'\r\n\r\nimport Register from './components/register-page/register'\r\nimport StartQuizPage from './components/start-quiz-page/startPage'\r\nimport Quiz from './components/quiz/quiz'\r\nimport _404 from './components/404-page/404'\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Route exact path=\"/\">\r\n        <Register/>\r\n      </Route>\r\n      <Route path=\"/start-quiz\">\r\n        <StartQuizPage/> \r\n      </Route>\r\n      <Route path=\"/quiz\">\r\n          <Quiz/>\r\n      </Route>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}